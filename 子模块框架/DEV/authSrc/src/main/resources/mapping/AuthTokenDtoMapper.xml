<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yaic.auth.thirdParty.dao.AuthTokenDtoMapper">
	<resultMap id="BaseResultMap" type="com.yaic.auth.thirdParty.dto.AuthTokenDto">
		<result column="app_id" jdbcType="VARCHAR" property="appId" />
		<result column="app_secret" jdbcType="VARCHAR" property="appSecret" />
		<result column="open_id" jdbcType="VARCHAR" property="openId" />
		<result column="access_token" jdbcType="VARCHAR" property="accessToken" />
		<result column="refresh_token" jdbcType="VARCHAR" property="refreshToken" />
		<result column="expiretime" jdbcType="TIMESTAMP" property="expiretime" />
		<result column="ref_expire_time" jdbcType="TIMESTAMP" property="refExpireTime" />
		<result column="valid_flag" jdbcType="INTEGER" property="validFlag" />
		<result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
		<result column="created_user" jdbcType="VARCHAR" property="createdUser" />
		<result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate" />
		<result column="updated_user" jdbcType="VARCHAR" property="updatedUser" />
	</resultMap>

	<sql id="Base_Column_List">
		app_id,
		app_secret,
		open_id,
		access_token,
		refresh_token,
		expiretime,
		ref_expire_time,
		valid_flag,
		created_date,
		created_user,
		updated_date,
		updated_user
	</sql>
	<insert id="insert" parameterType="com.yaic.auth.thirdParty.dto.AuthTokenDto">
		insert into
		t_auth_common_token (app_id, app_secret, open_id,
		access_token,
		refresh_token, expiretime,
		ref_expire_time, valid_flag, created_date,
		created_user, updated_date, updated_user
		)
		values
		(#{appId,jdbcType=VARCHAR}, #{appSecret,jdbcType=VARCHAR},
		#{openId,jdbcType=VARCHAR},
		#{accessToken,jdbcType=VARCHAR},
		#{refreshToken,jdbcType=VARCHAR}, #{expiretime,jdbcType=TIMESTAMP},
		#{refExpireTime,jdbcType=TIMESTAMP}, #{validFlag,jdbcType=CHAR},
		#{createdDate,jdbcType=TIMESTAMP},
		#{createdUser,jdbcType=VARCHAR},
		#{updatedDate,jdbcType=TIMESTAMP}, #{updatedUser,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.yaic.auth.thirdParty.dto.AuthTokenDto">
		insert into t_auth_common_token
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="appId != null">
				app_id,
			</if>
			<if test="appSecret != null">
				app_secret,
			</if>
			<if test="openId != null">
				open_id,
			</if>
			<if test="accessToken != null">
				access_token,
			</if>
			<if test="refreshToken != null">
				refresh_token,
			</if>
			<if test="expiretime != null">
				expiretime,
			</if>
			<if test="refExpireTime != null">
				ref_expire_time,
			</if>
			<if test="validFlag != null">
				valid_flag,
			</if>
			<if test="createdDate != null">
				created_date,
			</if>
			<if test="createdUser != null">
				created_user,
			</if>
			<if test="updatedDate != null">
				updated_date,
			</if>
			<if test="updatedUser != null">
				updated_user,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="appId != null">
				#{appId,jdbcType=VARCHAR},
			</if>
			<if test="appSecret != null">
				#{appSecret,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				#{openId,jdbcType=VARCHAR},
			</if>
			<if test="accessToken != null">
				#{accessToken,jdbcType=VARCHAR},
			</if>
			<if test="refreshToken != null">
				#{refreshToken,jdbcType=VARCHAR},
			</if>
			<if test="expiretime != null">
				#{expiretime,jdbcType=TIMESTAMP},
			</if>
			<if test="refExpireTime != null">
				#{refExpireTime,jdbcType=TIMESTAMP},
			</if>
			<if test="validFlag != null">
				#{validFlag,jdbcType=CHAR},
			</if>
			<if test="createdDate != null">
				#{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="createdUser != null">
				#{createdUser,jdbcType=VARCHAR},
			</if>
			<if test="updatedDate != null">
				#{updatedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedUser != null">
				#{updatedUser,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<select id="selectByConditions" parameterType="com.yaic.auth.thirdParty.dto.AuthTokenDto"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_auth_common_token
		<trim prefix="WHERE (" suffix=")" prefixOverrides="AND">
			<if test="appId != null">
				AND app_id = #{appId,jdbcType=VARCHAR}
			</if>
			<if test="appSecret != null">
				AND app_secret = #{appSecret,jdbcType=VARCHAR}
			</if>
			<if test="openId != null">
				AND open_id = #{openId,jdbcType=VARCHAR}
			</if>
			<if test="accessToken != null">
				AND access_token = #{accessToken,jdbcType=VARCHAR}
			</if>
			<if test="refreshToken != null">
				AND refresh_token = #{refreshToken,jdbcType=VARCHAR}
			</if>
			<if test="expiretime != null">
				AND expiretime = #{expiretime,jdbcType=TIMESTAMP}
			</if>
			<if test="refExpireTime != null">
				AND ref_expire_time = #{refExpireTime,jdbcType=TIMESTAMP}
			</if>
			<if test="validFlag != null">
				AND valid_flag = #{validFlag,jdbcType=CHAR}
			</if>
			<if test="createdDate != null">
				AND created_date = #{createdDate,jdbcType=TIMESTAMP}
			</if>
			<if test="createdUser != null">
				AND created_user = #{createdUser,jdbcType=VARCHAR}
			</if>
			<if test="updatedDate != null">
				AND updated_date = #{updatedDate,jdbcType=TIMESTAMP}
			</if>
			<if test="updatedUser != null">
				AND updated_user = #{updatedUser,jdbcType=VARCHAR}
			</if>
		</trim>
	</select>

	<update id="updateByAppIdSelective" parameterType="com.yaic.auth.thirdParty.dto.AuthTokenDto">
		update t_auth_common_token
		<set>
			<if test="appId != null">
				app_id = #{appId,jdbcType=VARCHAR},
			</if>
			<if test="appSecret != null">
				app_secret = #{appSecret,jdbcType=VARCHAR},
			</if>
			<if test="openId != null">
				open_id = #{openId,jdbcType=VARCHAR},
			</if>
			<if test="accessToken != null">
				access_token = #{accessToken,jdbcType=VARCHAR},
			</if>
			<if test="refreshToken != null">
				refresh_token = #{refreshToken,jdbcType=VARCHAR},
			</if>
			<if test="expiretime != null">
				expiretime = #{expiretime,jdbcType=TIMESTAMP},
			</if>
			<if test="refExpireTime != null">
				ref_expire_time = #{refExpireTime,jdbcType=TIMESTAMP},
			</if>
			<if test="validFlag != null">
				valid_flag = #{validFlag,jdbcType=CHAR},
			</if>
			<if test="createdDate != null">
				created_date = #{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="createdUser != null">
				created_user = #{createdUser,jdbcType=VARCHAR},
			</if>
			<if test="updatedDate != null">
				updated_date = #{updatedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedUser != null">
				updated_user = #{updatedUser,jdbcType=VARCHAR}
			</if>
		</set>
		where app_id = #{appId,jdbcType=VARCHAR}
	</update>
</mapper>